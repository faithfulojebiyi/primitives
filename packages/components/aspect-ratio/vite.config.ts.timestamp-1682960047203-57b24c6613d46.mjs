// vite.config.ts
import path, { resolve } from "node:path";
import Vue from "file:///Users/claranceliberi/projects/oku/primitives/node_modules/.pnpm/@vitejs+plugin-vue@4.2.1_vite@4.3.1_vue@3.3.0-beta.2/node_modules/@vitejs/plugin-vue/dist/index.mjs";
import { defineConfig } from "file:///Users/claranceliberi/projects/oku/primitives/node_modules/.pnpm/vite@4.3.1/node_modules/vite/dist/node/index.js";
import dtsPlugin from "file:///Users/claranceliberi/projects/oku/primitives/node_modules/.pnpm/vite-plugin-dts@2.3.0_vite@4.3.1/node_modules/vite-plugin-dts/dist/index.mjs";
import VueMacros from "file:///Users/claranceliberi/projects/oku/primitives/node_modules/.pnpm/unplugin-vue-macros@2.1.0_vite@4.3.1_vue@3.3.0-beta.2/node_modules/unplugin-vue-macros/dist/vite.mjs";

// package.json
var peerDependencies = {
  vue: "^3.3.0-beta.3"
};
var dependencies = {
  "@oku-ui/primitive": "workspace:^"
};

// vite.config.ts
var __vite_injected_original_dirname = "/Users/claranceliberi/projects/oku/primitives/packages/components/aspect-ratio";
var externals = [
  ...Object.keys(peerDependencies || {}),
  ...Object.keys(dependencies || {})
];
var vite_config_default = defineConfig({
  plugins: [
    dtsPlugin({
      include: ["./src/**/*.ts", "./src/**/*.tsx", "./src/**/*.vue"],
      skipDiagnostics: false,
      staticImport: true,
      outputDir: ["./dist/types"],
      cleanVueFileName: false
    }),
    VueMacros({
      plugins: {
        vue: Vue()
      }
    })
  ],
  resolve: {
    alias: {
      "@": resolve(__vite_injected_original_dirname, "src")
    }
  },
  build: {
    lib: {
      entry: path.resolve(__vite_injected_original_dirname, "./src/index.ts"),
      formats: ["es", "cjs"]
    },
    rollupOptions: {
      external: externals
    }
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiLCAicGFja2FnZS5qc29uIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL1VzZXJzL2NsYXJhbmNlbGliZXJpL3Byb2plY3RzL29rdS9wcmltaXRpdmVzL3BhY2thZ2VzL2NvbXBvbmVudHMvYXNwZWN0LXJhdGlvXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCIvVXNlcnMvY2xhcmFuY2VsaWJlcmkvcHJvamVjdHMvb2t1L3ByaW1pdGl2ZXMvcGFja2FnZXMvY29tcG9uZW50cy9hc3BlY3QtcmF0aW8vdml0ZS5jb25maWcudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL1VzZXJzL2NsYXJhbmNlbGliZXJpL3Byb2plY3RzL29rdS9wcmltaXRpdmVzL3BhY2thZ2VzL2NvbXBvbmVudHMvYXNwZWN0LXJhdGlvL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHBhdGgsIHsgcmVzb2x2ZSB9IGZyb20gJ25vZGU6cGF0aCdcblxuaW1wb3J0IFZ1ZSBmcm9tICdAdml0ZWpzL3BsdWdpbi12dWUnXG5pbXBvcnQgeyBkZWZpbmVDb25maWcgfSBmcm9tICd2aXRlJ1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vcW1oYy92aXRlLXBsdWdpbi1kdHNcbmltcG9ydCBkdHNQbHVnaW4gZnJvbSAndml0ZS1wbHVnaW4tZHRzJ1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vc3h6ei91bnBsdWdpbi12dWUtbWFjcm9zXG5pbXBvcnQgVnVlTWFjcm9zIGZyb20gJ3VucGx1Z2luLXZ1ZS1tYWNyb3Mvdml0ZSdcblxuaW1wb3J0ICogYXMgcGtnIGZyb20gJy4vcGFja2FnZS5qc29uJ1xuXG5jb25zdCBleHRlcm5hbHMgPSBbXG4gIC4uLk9iamVjdC5rZXlzKHBrZy5wZWVyRGVwZW5kZW5jaWVzIHx8IHt9KSxcbiAgLi4uT2JqZWN0LmtleXMocGtnLmRlcGVuZGVuY2llcyB8fCB7fSksXG5dXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoe1xuICBwbHVnaW5zOiBbXG4gICAgZHRzUGx1Z2luKHtcbiAgICAgIGluY2x1ZGU6IFsnLi9zcmMvKiovKi50cycsICcuL3NyYy8qKi8qLnRzeCcsICcuL3NyYy8qKi8qLnZ1ZSddLFxuICAgICAgc2tpcERpYWdub3N0aWNzOiBmYWxzZSxcbiAgICAgIHN0YXRpY0ltcG9ydDogdHJ1ZSxcbiAgICAgIG91dHB1dERpcjogWycuL2Rpc3QvdHlwZXMnXSxcbiAgICAgIGNsZWFuVnVlRmlsZU5hbWU6IGZhbHNlLFxuICAgIH0pLFxuICAgIFZ1ZU1hY3Jvcyh7XG4gICAgICBwbHVnaW5zOiB7XG4gICAgICAgIHZ1ZTogVnVlKCksXG4gICAgICB9LFxuICAgIH0pLFxuICBdLFxuICByZXNvbHZlOiB7XG4gICAgYWxpYXM6IHtcbiAgICAgICdAJzogcmVzb2x2ZShfX2Rpcm5hbWUsICdzcmMnKSxcbiAgICB9LFxuICB9LFxuICBidWlsZDoge1xuICAgIGxpYjoge1xuICAgICAgZW50cnk6IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuL3NyYy9pbmRleC50cycpLFxuICAgICAgZm9ybWF0czogWydlcycsICdjanMnXSxcbiAgICB9LFxuICAgIHJvbGx1cE9wdGlvbnM6IHtcbiAgICAgIGV4dGVybmFsOiBleHRlcm5hbHMsXG4gICAgfSxcbiAgfSxcbn0pXG4iLCAie1xuICBcIm5hbWVcIjogXCJAb2t1LXVpL2FzcGVjdC1yYXRpb1wiLFxuICBcInR5cGVcIjogXCJtb2R1bGVcIixcbiAgXCJ2ZXJzaW9uXCI6IFwiMS4wLjBcIixcbiAgXCJsaWNlbnNlXCI6IFwiTUlUXCIsXG4gIFwic291cmNlXCI6IFwic3JjL2luZGV4LnRzXCIsXG4gIFwiZnVuZGluZ1wiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9zcG9uc29ycy9wcm9kdWN0ZGV2Ym9va1wiLFxuICBcImhvbWVwYWdlXCI6IFwiaHR0cHM6Ly9va3UtdWkuY29tL3ByaW1pdGl2ZXNcIixcbiAgXCJyZXBvc2l0b3J5XCI6IHtcbiAgICBcInR5cGVcIjogXCJnaXRcIixcbiAgICBcInVybFwiOiBcImdpdCtodHRwczovL2dpdGh1Yi5jb20vb2t1LXVpL3ByaW1pdGl2ZXMuZ2l0XCJcbiAgfSxcbiAgXCJidWdzXCI6IHtcbiAgICBcInVybFwiOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9va3UtdWkvcHJpbWl0aXZlcy9pc3N1ZXNcIlxuICB9LFxuICBcImV4cG9ydHNcIjoge1xuICAgIFwiLlwiOiB7XG4gICAgICBcInR5cGVzXCI6IFwiLi9kaXN0L3R5cGVzL2luZGV4LmQudHNcIixcbiAgICAgIFwicmVxdWlyZVwiOiBcIi4vZGlzdC9hc3BlY3QtcmF0aW8uY2pzXCIsXG4gICAgICBcImltcG9ydFwiOiBcIi4vZGlzdC9hc3BlY3QtcmF0aW8uanNcIlxuICAgIH1cbiAgfSxcbiAgXCJtYWluXCI6IFwiZGlzdC9hc3BlY3QtcmF0aW8uY2pzXCIsXG4gIFwibW9kdWxlXCI6IFwiZGlzdC9hc3BlY3QtcmF0aW8uanNcIixcbiAgXCJ0eXBlc1wiOiBcImRpc3QvdHlwZXMvaW5kZXguZC50c1wiLFxuICBcImZpbGVzXCI6IFtcbiAgICBcImRpc3RcIixcbiAgICBcIlJFQURNRS5tZFwiXG4gIF0sXG4gIFwic2NyaXB0c1wiOiB7XG4gICAgXCJjbGVhblwiOiBcInJtIC1yZiBkaXN0XCIsXG4gICAgXCJidWlsZFwiOiBcInZpdGUgYnVpbGQgLS1tb2RlIHByb2R1Y3Rpb25cIixcbiAgICBcImRldlwiOiBcInZpdGUgYnVpbGQgLS1tb2RlIHByb2R1Y3Rpb24gLS13YXRjaFwiLFxuICAgIFwibGludFwiOiBcImVzbGludCAuXCIsXG4gICAgXCJsaW50OmZpeFwiOiBcImVzbGludCAuIC0tZml4XCJcbiAgfSxcbiAgXCJwZWVyRGVwZW5kZW5jaWVzXCI6IHtcbiAgICBcInZ1ZVwiOiBcIl4zLjMuMC1iZXRhLjNcIlxuICB9LFxuICBcImRlcGVuZGVuY2llc1wiOiB7XG4gICAgXCJAb2t1LXVpL3ByaW1pdGl2ZVwiOiBcIndvcmtzcGFjZTpeXCJcbiAgfVxufVxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUE0WixPQUFPLFFBQVEsZUFBZTtBQUUxYixPQUFPLFNBQVM7QUFDaEIsU0FBUyxvQkFBb0I7QUFHN0IsT0FBTyxlQUFlO0FBR3RCLE9BQU8sZUFBZTs7O0FDMkJwQix1QkFBb0I7QUFBQSxFQUNsQixLQUFPO0FBQ1Q7QUFDQSxtQkFBZ0I7QUFBQSxFQUNkLHFCQUFxQjtBQUN2Qjs7O0FEekNGLElBQU0sbUNBQW1DO0FBYXpDLElBQU0sWUFBWTtBQUFBLEVBQ2hCLEdBQUcsT0FBTyxLQUFTLG9CQUFvQixDQUFDLENBQUM7QUFBQSxFQUN6QyxHQUFHLE9BQU8sS0FBUyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3ZDO0FBQ0EsSUFBTyxzQkFBUSxhQUFhO0FBQUEsRUFDMUIsU0FBUztBQUFBLElBQ1AsVUFBVTtBQUFBLE1BQ1IsU0FBUyxDQUFDLGlCQUFpQixrQkFBa0IsZ0JBQWdCO0FBQUEsTUFDN0QsaUJBQWlCO0FBQUEsTUFDakIsY0FBYztBQUFBLE1BQ2QsV0FBVyxDQUFDLGNBQWM7QUFBQSxNQUMxQixrQkFBa0I7QUFBQSxJQUNwQixDQUFDO0FBQUEsSUFDRCxVQUFVO0FBQUEsTUFDUixTQUFTO0FBQUEsUUFDUCxLQUFLLElBQUk7QUFBQSxNQUNYO0FBQUEsSUFDRixDQUFDO0FBQUEsRUFDSDtBQUFBLEVBQ0EsU0FBUztBQUFBLElBQ1AsT0FBTztBQUFBLE1BQ0wsS0FBSyxRQUFRLGtDQUFXLEtBQUs7QUFBQSxJQUMvQjtBQUFBLEVBQ0Y7QUFBQSxFQUNBLE9BQU87QUFBQSxJQUNMLEtBQUs7QUFBQSxNQUNILE9BQU8sS0FBSyxRQUFRLGtDQUFXLGdCQUFnQjtBQUFBLE1BQy9DLFNBQVMsQ0FBQyxNQUFNLEtBQUs7QUFBQSxJQUN2QjtBQUFBLElBQ0EsZUFBZTtBQUFBLE1BQ2IsVUFBVTtBQUFBLElBQ1o7QUFBQSxFQUNGO0FBQ0YsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
